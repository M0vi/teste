-- Makes the lib working
_Hawk = "ohhahtuhthttouttpwuttuaunbotwo"

-- Load the Hawk Library
local Hawk = loadstring(game:HttpGet("https://raw.githubusercontent.com/TheHanki/HawkHUB/main/LibSources/HawkLib.lua", true))()

-- Create Window
local Window = Hawk:Window({
    ScriptName = "Squares' Hitbox Extender",
    DestroyIfExists = true,
    Theme = "Dark"
})

-- Create Tabs
local mainTab = Window:Tab("Main")
local emergencyTab = Window:Tab("Emergency")

-- Main Tab
local mainSection = mainTab:Section("Hitbox Extender")
local espSection = mainTab:Section("ESP")
local ignoresSection = mainTab:Section("Ignores")
local collisionsSection = mainTab:Section("Collisions")
local miscSection = mainTab:Section("Keybinds")

-- Emergency Tab
local emergencySection = emergencyTab:Section("Fixes")

-- Services
local Teams = game:GetService("Teams")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Camera = Workspace.CurrentCamera
local lPlayer = Players.LocalPlayer

-- Variables
local players = {}
local entities = {}
local teamModule = nil

-- MT-API
if not getgenv().MTAPIMutex then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/RectangularObject/MT-Api-v2/main/__source/mt-api%20v2.lua", true))()
end

-- Game Loaded Check
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- UI Elements
local extenderToggled = false
local extenderSize = 10
local extenderTransparency = 0.5
local customPartName = "HeadHB"
local extenderPartList = {"HumanoidRootPart"}
local espNameToggled = false
local espNameColor1 = Color3.fromRGB(255, 255, 255)
local espNameColor2 = Color3.fromRGB(0, 0, 0)
local espNameUseTeamColor = false
local espNameType = "Display Name"
local espHighlightToggled = false
local espHighlightColor1 = Color3.fromRGB(0, 0, 0)
local espHighlightColor2 = Color3.fromRGB(0, 0, 0)
local espHighlightUseTeamColor = false
local espHighlightDepthMode = "Occluded"
local espHighlightFillTransparency = 0.5
local espHighlightOutlineTransparency = 0
local ignoreOwnTeamToggled = false
local ignoreSelectedTeamsToggled = false
local ignoreSelectedPlayersToggled = false
local ignorePlayerList = {}
local ignoreTeamList = {}
local collisionsToggled = false

-- UI Setup
mainSection:Toggle("Toggle", function(value)
    extenderToggled = value
    updatePlayers()
end)

mainSection:Slider("Size", 2, 100, function(value)
    extenderSize = value
    updatePlayers()
end)

mainSection:Slider("Transparency", 0, 1, function(value)
    extenderTransparency = value
    updatePlayers()
end)

mainSection:TextBox("Custom Part Name", "HeadHB", function(value)
    customPartName = value
    updatePlayers()
end)

mainSection:Dropdown("Body Parts", {"Custom Part", "Head", "HumanoidRootPart", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"}, function(selected)
    extenderPartList = selected
    updatePlayers()
end)

espSection:Toggle("Name", function(value)
    espNameToggled = value
    updatePlayers()
end)

espSection:ColorPicker("Name Color", Color3.fromRGB(255, 255, 255), function(color)
    espNameColor1 = color
    updatePlayers()
end)

espSection:ColorPicker("Name Outline Color", Color3.fromRGB(0, 0, 0), function(color)
    espNameColor2 = color
    updatePlayers()
end)

espSection:Toggle("Use Team Color For Name", function(value)
    espNameUseTeamColor = value
    updatePlayers()
end)

espSection:Dropdown("Name Type", {"Display Name", "Account Name"}, function(selected)
    espNameType = selected
    updatePlayers()
end)

espSection:Toggle("Chams", function(value)
    espHighlightToggled = value
    updatePlayers()
end)

espSection:ColorPicker("Chams Fill Color", Color3.fromRGB(0, 0, 0), function(color)
    espHighlightColor1 = color
    updatePlayers()
end)

espSection:ColorPicker("Chams Outline Color", Color3.fromRGB(0, 0, 0), function(color)
    espHighlightColor2 = color
    updatePlayers()
end)

espSection:Toggle("Use Team Color For Chams", function(value)
    espHighlightUseTeamColor = value
    updatePlayers()
end)

espSection:Dropdown("Chams Depth Mode", {"Occluded", "AlwaysOnTop"}, function(selected)
    espHighlightDepthMode = selected
    updatePlayers()
end)

espSection:Slider("Chams Fill Transparency", 0, 1, function(value)
    espHighlightFillTransparency = value
    updatePlayers()
end)

espSection:Slider("Chams Outline Transparency", 0, 1, function(value)
    espHighlightOutlineTransparency = value
    updatePlayers()
end)

ignoresSection:Toggle("Ignore Sitting Players", function(value)
    Toggles.extenderSitCheck = value
    updatePlayers()
end)

ignoresSection:Toggle("Ignore Forcefielded Players", function(value)
    Toggles.extenderFFCheck = value
    updatePlayers()
end)

ignoresSection:Toggle("Ignore Own Team", function(value)
    ignoreOwnTeamToggled = value
    updatePlayers()
end)

ignoresSection:Toggle("Ignore Selected Teams", function(value)
    ignoreSelectedTeamsToggled = value
    updatePlayers()
end)

ignoresSection:Toggle("Ignore Selected Players", function(value)
    ignoreSelectedPlayersToggled = value
    updatePlayers()
end)

ignoresSection:Dropdown("Players", {}, function(selected)
    ignorePlayerList = selected
    updatePlayers()
end)

ignoresSection:Dropdown("Teams", {}, function(selected)
    ignoreTeamList = selected
    updatePlayers()
end)

collisionsSection:Toggle("Enable Collisions", function(value)
    collisionsToggled = value
    updatePlayers()
end)

miscSection:KeyBind("Toggle UI", "End", function()
    Hawk:ToggleUI()
end)

miscSection:KeyBind("Force Update", "Home", function()
    updatePlayers()
end)

emergencySection:Button("Fix Missing Players", function()
    local found = 0
    for _, player in ipairs(Players:GetPlayers()) do
        if players[player] or player == lPlayer then continue else
            found = found + 1
            addPlayer(player)
        end
    end
    if found > 0 then
        Hawk:AddNotifications():Notification("Found Players", "Found " .. found .. " players", "Done", 3)
    else
        Hawk:AddNotifications():Notification("No Missing Players", "No missing players found", "Done", 3)
    end
    updatePlayers()
end)

-- Game-Specific Team Module
if game.GameId == 504234221 then -- Vampire Hunters 3
    teamModule = require(ReplicatedStorage.Scripts.Modules.PlayerModule)
end
if game.GameId == 1934496708 then -- Project: SCP
    teamModule = require(Workspace:WaitForChild("Teams"))
end

-- Player Handling
local function addPlayer(player)
    table.insert(ignorePlayerList, player.Name)
    players[player] = {}
    local playerIdx = players[player]
    local playerChar = player.Character
    local defaultProperties = {}

    local function isTeammate()
        if game.GameId == 718936923 then -- Neighborhood War
            if not lPlayer.Character or not playerChar or not playerChar:FindFirstChild("HumanoidRootPart") then return true end
            return lPlayer.Character.HumanoidRootPart.Color == playerChar.HumanoidRootPart.Color
        elseif game.PlaceId == 633284182 then -- Fireteam
            if not player:FindFirstChild("PlayerData") or not player.PlayerData:FindFirstChild("TeamValue") then return true end
            return lPlayer.PlayerData.TeamValue.Value == player.PlayerData.TeamValue.Value
        elseif game.PlaceId == 2029250188 then -- Q-Clash
            if not lPlayer.Character or not playerChar then return true end
            return lPlayer.Character.Parent == playerChar.Parent
        elseif game.PlaceId == 2978450615 then -- Paintball Reloaded
            return getrenv()._G.PlayerProfiles.Data[lPlayer.Name].Team == getrenv()._G.PlayerProfiles.Data[player.Name].Team
        elseif game.GameId == 1934496708 then -- Project: SCP
            if Workspace.FriendlyFire.Value then return false end
            return (not player.Team or player.Team.Name == "LOBBY" or lPlayer.Team.Name == "LOBBY" or player.Team.Name == "Admin" or lPlayer.Team == player.Team) or
            teamModule[lPlayer.Team.Name] == teamModule[player.Team.Name] or
            ((teamModule[lPlayer.Team.Name] == "CI" and teamModule[player.Team.Name] == "CD") or
            (teamModule[player.Team.Name] == "CI" and teamModule[lPlayer.Team.Name] == "CD"))
        elseif game.PlaceId == 2622527242 then -- SCP rBreach
            if not player.Team or player.Team.Name == "Intro" or player.Team.Name == "Spectator" or player.Team.Name == "Not Playing" or lPlayer.Team == player.Team then return true end
            local lPlayerTeamName = lPlayer.Team.Name
            local playerTeamName = player.Team.Name
            local selfTeam
            local playerTeam
            if lPlayerTeamName == "Class-D Personnel" or lPlayerTeamName == "Chaos Insurgency" then
                selfTeam = "Chads"
            end
            if lPlayerTeamName == "Facility Personnel" or lPlayerTeamName == "Security Department" or lPlayerTeamName == "Mobile Task Force" then
                selfTeam = "Crayon Eaters"
            end
            if lPlayerTeamName == "SCPs" or lPlayerTeamName == "Serpent's Hand" then
                selfTeam = "Menaces to Society"
            end
            if lPlayerTeamName == "Global Occult Coalition" then
                selfTeam = "Who?"
            end
            if lPlayerTeamName == "Unusual Incidents Unit" then
                selfTeam = "Who2?"
            end
            if playerTeamName == "Class-D Personnel" or playerTeamName == "Chaos Insurgency" then
                playerTeam = "Chads"
            end
            if playerTeamName == "Facility Personnel" or playerTeamName == "Security Department" or playerTeamName == "Mobile Task Force" then
                playerTeam = "Crayon Eaters"
            end
            if playerTeamName == "SCPs" or playerTeamName == "Serpent's Hand" then
                playerTeam = "Menaces to Society"
            end
            if playerTeamName == "Global Occult Coalition" then
                playerTeam = "Who?"
            end
            if playerTeamName == "Unusual Incidents Unit" then
                selfTeam = "Who2?"
            end
            if selfTeam == "Who2?" or playerTeam == "Who2?" then
                if selfTeam == "Crayon Eaters" or playerTeam == "Crayon Eaters" or selfTeam == "Who?" or playerTeam == "Who?" then
                    return true
                end
            end
            return selfTeam == playerTeam
        elseif game.PlaceId == 8770868695 then -- Anomalous Activities: First Contact
            if not lPlayer.Character or not playerChar or not player.Team or player.Team.Name == "Dead" or player.Team.Name == "Inactive" then return true end
            return lPlayer.Character.Parent == playerChar.Parent
        elseif game.PlaceId == 5884786982 then -- Escape The Darkness
            if not lPlayer.Character or not playerChar then return true end
            return lPlayer.Character.name ~= "Killer" and playerChar.Name ~= "Killer"
        elseif game.GameId == 2162282815 then -- Rush Point
            if not player:FindFirstChild("SelectedTeam") then return true end
            return player.SelectedTeam.Value == lPlayer.SelectedTeam.Value
        elseif game.PlaceId == 1240644540 then -- Vampire Hunters 3
            if not teamModule or not teamModule.IsPlayerSurvivor then return true end
            return teamModule.IsPlayerSurvivor(nil, player) == true and teamModule.IsPlayerSurvivor(nil, lPlayer) == true
        elseif game.PlaceId == 10236714118 then -- Return of Humans vs Zombies
            if not player:FindFirstChild("PlayerData") or not player.PlayerData:FindFirstChild("Team") then return true end
            return lPlayer.PlayerData.Team.Value == player.PlayerData.Team.Value
        end
        return lPlayer.Team == player.Team
    end

    local function isDead()
        if not playerChar then return true end
        local humanoid = playerChar:FindFirstChildWhichIsA("Humanoid")
        if game.PlaceId == 6172932937 then -- Energy Assault
            return player.ragdolled.Value
        elseif game.GameId == 718936923 then -- Neighborhood War
            return playerChar:FindFirstChild("Dead") ~= nil
        end
        return humanoid and humanoid:GetState() == Enum.HumanoidStateType.Dead
    end

    local function isSitting()
        local humanoid = playerChar:FindFirstChildWhichIsA("Humanoid")
        return Toggles.extenderSitCheck and humanoid ~= nil and humanoid.Sit == true
    end

    local function isFFed()
        if not playerChar then return false end
        if game.PlaceId == 4991214437 or game.PlaceId == 6652350934 then -- town
            return playerChar.Head.Material == Enum.Material.ForceField
        end
        local ff = playerChar:FindFirstChildWhichIsA("ForceField")
        return Toggles.extenderFFCheck and playerChar ~= nil and ff ~= nil and ff.Visible == true
    end

    local function isIgnored()
        if not playerChar then return true end
        return ignoreOwnTeamToggled and isTeammate() or
        ignoreSelectedTeamsToggled and table.find(ignoreTeamList, tostring(player.Team)) or
        ignoreSelectedPlayersToggled and table.find(ignorePlayerList, tostring(player.Name))
    end

    local debounce = false
    local function setup(part)
        defaultProperties[part.Name] = {}
        local properties = defaultProperties[part.Name]
        properties.Size = part.Size
        properties.Transparency = part.Transparency
        properties.Massless = part.Massless
        properties.CanCollide = part.CanCollide
        local getSizeHook = part:AddGetHook("Size", properties.Size)
        local getTransparencyHook = part:AddGetHook("Transparency", properties.Transparency)
        local getMasslessHook = part:AddGetHook("Massless", properties.Massless)
        local getCanCollideHook = part:AddGetHook("CanCollide", properties.CanCollide)
        local setSizeHook = part:AddSetHook("Size", function(_, value)
            properties.Size = value
            getSizeHook:Modify("Size", properties.Size)
            if extenderToggled then
                local size = extenderSize
                return Vector3.new(size, size, size)
            end
            return properties.Size
        end)
        local setTransparencyHook = part:AddSetHook("Transparency", function(_, value)
            properties.Transparency = value
            getTransparencyHook:Modify("Transparency", properties.Transparency)
            if extenderToggled then
                return extenderTransparency
            end
            return properties.Transparency
        end)
        local setMasslessHook = part:AddSetHook("Massless", function(_, value)
            properties.Massless = value
            getMasslessHook:Modify("Massless", properties.Massless)
            if extenderToggled then
                if part.Name ~= "HumanoidRootPart" then
                    return true
                end
            end
            return properties.Massless
        end)
        local setCanCollideHook = part:AddSetHook("CanCollide", function(_, value)
            properties.CanCollide = value
            getCanCollideHook:Modify("CanCollide", properties.CanCollide)
            if extenderToggled and not collisionsToggled then
                if part.Name == "Head" or part.Name == "HumanoidRootPart" then
                    return false
                end
            end
            return properties.CanCollide
        end)
        local changed = part.Changed:Connect(function(property)
            if debounce then return end
            if properties[property] then
                if properties[property] ~= part[property] then
                    properties[property] = part[property]
                end
                playerIdx:Update()
            end
        end)
        part.Destroying:Connect(function()
            getSizeHook:Remove()
            getTransparencyHook:Remove()
            getMasslessHook:Remove()
            getCanCollideHook:Remove()
            setSizeHook:Remove()
            setTransparencyHook:Remove()
            setMasslessHook:Remove()
            setCanCollideHook:Remove()
            changed:Disconnect()
        end)
    end

    local function isActive(part)
        local name = part.Name
        for _, v in pairs(extenderPartList) do
            if string.match(name, v) or (v == "Custom Part" and string.match(name, customPartName)) or
            (v == "Left Arm" and string.match(name, "Left") and (string.match(name, "Arm") or string.match(name, "Hand"))) or
            (v == "Right Arm" and string.match(name, "Right") and (string.match(name, "Arm") or string.match(name, "Hand"))) or
                      (v == "Left Leg" and string.match(name, "Left") and (string.match(name, "Leg") or string.match(name, "Foot"))) or
            (v == "Right Leg" and string.match(name, "Right") and (string.match(name, "Leg") or string.match(name, "Foot"))) then
                return true
            end
        end
        return false
    end

    local function resize(part)
        if not defaultProperties[part.Name] then
            setup(part)
        end
        if extenderToggled and isActive(part) and not isIgnored() and not isSitting() and not isFFed() and not isDead() then
            if part.Name ~= "HumanoidRootPart" then
                part.Massless = true
            end
            if not collisionsToggled then
                part.CanCollide = false
            else
                part.CanCollide = defaultProperties[part.Name].CanCollide
            end
            local size = extenderSize
            part.Size = Vector3.new(size, size, size)
            part.Transparency = extenderTransparency
            if part.Name == "Head" then
                local face = part:FindFirstChild("face")
                if face then
                    face.Transparency = extenderTransparency
                end
            end
        else
            part.Massless = defaultProperties[part.Name].Massless
            part.CanCollide = defaultProperties[part.Name].CanCollide
            part.Size = defaultProperties[part.Name].Size
            part.Transparency = defaultProperties[part.Name].Transparency
            if part.Name == "Head" then
                local face = part:FindFirstChild("face")
                if face then
                    face.Transparency = defaultProperties["Head"].Transparency
                end
            end
        end
    end

    function playerIdx:Update()
        if not playerChar then return end
        debounce = true
        for _, v in pairs(playerChar:GetChildren()) do
            if v:IsA("BasePart") then
                resize(v)
            end
        end
        debounce = false
    end

    -- ESP
    local nameEsp = Drawing.new("Text")
    nameEsp.Center = true
    nameEsp.Outline = true
    local chams = Instance.new("Highlight")
    chams.Parent = game:GetService("CoreGui")

    function playerIdx:UpdateESP()
        if not playerChar or isIgnored() or isDead() then
            nameEsp.Visible = false
            chams.Enabled = false
            return
        end
        if espNameToggled then
            local target = playerChar:FindFirstChild("Torso") or playerChar:FindFirstChild("HumanoidRootPart")
            if target then
                local pos, vis = Camera:WorldToViewportPoint(target.Position)
                if vis then
                    if espNameType == "Display Name" then
                        nameEsp.Text = player.DisplayName
                    else
                        nameEsp.Text = player.Name
                    end
                    if espNameUseTeamColor then
                        nameEsp.Color = player.TeamColor.Color
                    else
                        nameEsp.Color = espNameColor1
                    end
                    nameEsp.OutlineColor = espNameColor2
                    nameEsp.Position = Vector2.new(pos.X, pos.Y)
                    nameEsp.Size = 1000 / pos.Z + 10
                    nameEsp.Visible = true
                else
                    nameEsp.Visible = false
                end
            else
                nameEsp.Visible = false
            end
        else
            nameEsp.Visible = false
        end
        if espHighlightToggled then
            chams.Adornee = playerChar
            if espHighlightUseTeamColor then
                chams.FillColor = player.TeamColor.Color
                chams.OutlineColor = player.TeamColor.Color
            else
                chams.FillColor = espHighlightColor1
                chams.OutlineColor = espHighlightColor2
            end
            chams.DepthMode = Enum.HighlightDepthMode[espHighlightDepthMode]
            chams.FillTransparency = espHighlightFillTransparency
            chams.OutlineTransparency = espHighlightOutlineTransparency
            chams.Enabled = true
        else
            chams.Enabled = false
        end
    end

    function playerIdx:DeleteVisuals()
        nameEsp:Remove()
        chams:Destroy()
    end

    -- jank fix for CharacterAdded firing too early
    local function WaitForFullChar(char)
        local startTime = tick()
        local humanoid = char:FindFirstChildWhichIsA("Humanoid")
        if not humanoid then
            repeat
                if char == nil then
                    return false
                end
                humanoid = char:FindFirstChildWhichIsA("Humanoid")
                task.wait()
            until humanoid or tick() - startTime >= 2
        end
        local loaded = false
        startTime = tick()
        repeat
            local limbs = 0
            for _, v in pairs(char:GetChildren()) do
                if humanoid:GetLimb(v) ~= Enum.Limb.Unknown then
                    limbs += 1
                end
            end
            if limbs == 6 or limbs == 15 then
                loaded = true
            end
            task.wait()
        until loaded or tick() - startTime >= 3
        return true
    end

    player.CharacterAdded:Connect(function(character)
        playerChar = character
        defaultProperties = {}
        if WaitForFullChar(character) then
            playerIdx:Update()
            local humanoid = character:FindFirstChildWhichIsA("Humanoid")
            if humanoid then
                humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                    if humanoid.Health <= 0 then
                        playerIdx:Update()
                    end
                end)
                humanoid.StateChanged:Connect(function(_, newState)
                    if newState == Enum.HumanoidStateType.Dead then
                        playerIdx:Update()
                    end
                end)
            end
            if character:FindFirstChildWhichIsA("ForceField") then
                playerIdx:Update()
            end
            character.ChildAdded:Connect(function(child)
                if game.GameId == 718936923 then -- Neighborhood War
                    if child.Name == "Dead" then
                        playerIdx:Update()
                        return
                    end
                end
                if child:IsA("ForceField") then
                    playerIdx:Update()
                end
            end)
            character.ChildRemoved:Connect(function(child)
                if child:IsA("ForceField") then
                    playerIdx:Update()
                end
            end)
            if game.PlaceId == 4991214437 or game.PlaceId == 6652350934 then -- town
                local head = playerChar:FindFirstChild("Head")
                head:GetPropertyChangedSignal("Material"):Connect(function()
                    playerIdx:Update()
                end)
            end
        end
    end)
    player.CharacterRemoving:Connect(function()
        if playerIdx then
            defaultProperties = {}
        end
    end)
    player:GetPropertyChangedSignal("Team"):Connect(function(team)
        playerIdx:Update()
    end)
    if game.PlaceId == 6172932937 then -- Energy Assault
        local ragdolled = player:WaitForChild("ragdolled")
        ragdolled.Changed:Connect(function()
            playerIdx:Update()
        end)
    end
    if game.GameId == 1934496708 then -- Project: SCP
        local ff = Workspace:WaitForChild("FriendlyFire")
        ff.Changed:Connect(function()
            playerIdx:Update()
        end)
    end
    if game.GameId == 2162282815 then -- Rush Point
        local mapFolder = Workspace:WaitForChild("MapFolder")
        local gamePlayers = mapFolder:WaitForChild("Players")
        for _, v in pairs(gamePlayers:GetChildren()) do
            if v.Name == player.Name then
                playerChar = v
            end
        end
        gamePlayers.ChildAdded:Connect(function(v)
            if v.Name == player.Name then
                playerChar = v
            end
        end)
    end
    if game.PlaceId == 4991214437 or game.PlaceId == 6652350934 then -- town
        if playerChar then
            local head = playerChar:FindFirstChild("Head")
            head:GetPropertyChangedSignal("Material"):Connect(function()
                playerIdx:Update()
            end)
        end
    end
end

local function removePlayer(player)
    if not players[player] then return end
    players[player]:DeleteVisuals()
    table.remove(ignorePlayerList, table.find(ignorePlayerList, player.Name))
    players[player] = nil
end

-- Initial Player Setup
for _, player in ipairs(Players:GetPlayers()) do
    if player == lPlayer then
        continue
    end
    addPlayer(player)
end

-- Team List Setup
for _, team in pairs(Teams:GetTeams()) do
    if team:IsA("Team") then
        table.insert(ignoreTeamList, team.Name)
    end
end

-- Event Connections
Players.PlayerAdded:Connect(function(player)
    addPlayer(player)
end)
Players.PlayerRemoving:Connect(function(player)
    removePlayer(player)
end)
Teams.ChildAdded:Connect(function(team)
    if team:IsA("Team") then
        table.insert(ignoreTeamList, team.Name)
    end
end)
Teams.ChildRemoved:Connect(function(team)
    if team:IsA("Team") then
        table.remove(ignoreTeamList, table.find(ignoreTeamList, team.Name))
    end
end)

-- Render Step
RunService:BindToRenderStep("furryWalls", Enum.RenderPriority.Camera.Value - 1, function()
    for _, player in pairs(players) do
        task.spawn(function()
            player:UpdateESP()
        end)
    end
end)

-- Update Players
local function updatePlayers()
    for _, player in pairs(players) do
        task.spawn(function()
            player:Update()
        end)
    end
end

-- Notification
Hawk:AddNotifications():Notification("Loaded", "Squares' Hitbox Extender has been loaded", "Done", 3)

